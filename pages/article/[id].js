import Layout from '../../components/Layout'
import { getArticleById, getArticles } from '../../lib/articles'
import { useRouter } from 'next/router'

export default function Article({ article }) {
  const router = useRouter()

  if (router.isFallback) {
    return <div>Loading...</div>
  }

  if (!article) {
    return <div>Article not found</div>
  }

  return (
    <Layout title={`${article.title} - AIToolHub`}>
      <article className="max-w-4xl mx-auto">
        {/* Article Header */}
        <header className="mb-8">
          <nav className="text-sm text-gray-600 dark:text-gray-400 mb-4">
            <a href="/" className="hover:text-blue-600">Home</a> / {article.category}
          </nav>
          
          <h1 className="text-4xl font-bold text-gray-900 dark:text-white mb-4">
            {article.title}
          </h1>
          
          <div className="flex items-center space-x-4 text-sm text-gray-600 dark:text-gray-400">
            <span>Published: {article.date}</span>
            <span>â€¢</span>
            <span>Category: {article.category}</span>
          </div>
        </header>

        {/* Article Content */}
        <div className="prose prose-lg dark:prose-invert max-w-none article-content">
          <div className="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg mb-6">
            <strong>TL;DR:</strong> This article was automatically generated by our AI system and is regularly updated with the latest information.
          </div>
          
          <p>{article.content || 'Full article content will be generated by AI...'}</p>
          
          {/* Placeholder for AI-generated content */}
          <div className="border-2 border-dashed border-gray-300 dark:border-gray-600 p-8 rounded-lg text-center my-8">
            <p className="text-gray-500 dark:text-gray-400">
              ðŸ¤– AI-generated content will appear here automatically
            </p>
            <p className="text-sm mt-2">Our AI system updates this content daily</p>
          </div>
        </div>

        {/* Tags */}
        <footer className="mt-8 pt-6 border-t border-gray-200 dark:border-gray-700">
          <div className="flex flex-wrap gap-2">
            {article.tags.map(tag => (
              <span key={tag} className="px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full text-sm">
                #{tag}
              </span>
            ))}
          </div>
        </footer>
      </article>
    </Layout>
  )
}

export async function getStaticPaths() {
  const articles = await getArticles()
  const paths = articles.map(article => ({
    params: { id: article.id }
  }))

  return {
    paths,
    fallback: true
  }
}

export async function getStaticProps({ params }) {
  const article = await getArticleById(params.id)

  return {
    props: {
      article
    },
    revalidate: 3600 // Refresh every hour
  }
          }
